---
title: tools
layout: post
category: golang
author: 夏泽民
---
https://revel.github.io/
https://github.com/visualfc/liteide
https://github.com/GoClipse/goclipse
https://github.com/DisposaBoy/GoSublime
https://github.com/fatih/vim-go
https://github.com/qiniu/checkstyle
https://github.com/KyleBanks/depth
https://github.com/ofabry/go-callvis
https://rootrl.github.io/2018/06/07/%E7%94%A8Golang%E6%92%B8%E4%BA%86%E4%B8%AA%E5%B0%8F%E5%B7%A5%E5%85%B7/
https://www.zhihu.com/question/319330143/answer/668644612
Golang框架
Web框架可以帮助开发人员尽可能方便快捷地构建应用程序。Go语言还比较新，所以使用的框架带有充足的文档很重要。
https://zhuanlan.zhihu.com/p/30432648
<!-- more -->
这里有9个框架可帮助你使用Go语言构建项目。

1.Revel
作为Go语言的高效生产力框架，Revel包含的Hot Code Reload工具可以让你在每次更改文件时重建项目。它还包括各种全面和高性能的功能，因此你不需要找外部库集成到框架中。

2.Beego
Beego是一个完整的MVC框架，有自己的日志库、ORM和Web框架。你不需要再去安装第三方库。它有一个称为Bee Tool的内置工具，用于监视代码更改，并在检测到更改时运行任务。

Beego可以为你节省很多时间，特别是在项目一开始，你要弄清楚日志框架或应用程序结构的时候。

3.Martini
受Sinatra启发，Martini是一个极其轻巧但功能强大的框架。它被开发用于用Golang编写模块化Web应用程序和服务。

它的特点是非侵入式设计，快速易用，且包括各种处理程序和中间件。它能够为HTML5模式的AngularJS应用程序执行基本路由，异常处理和默认文档服务。

Martini的最佳功能是可以使用反射，它允许开发人员动态地将数据插入到处理函数中并添加新的服务。Martini也完全兼容http.HandlerFunc界面。不过，缺点在于Martini框架不再维护了。

4.Gin Gonic
Gin Gonic是一个Web框架，有类似Martini的API，但性能更好。如果你以前使用过Martini，那么你也一定熟悉Gin Gonic。没用过Martini也没关系，只需要学习10分钟就能掌握Gin。就是这么容易！

Gin Gonic是一个极简化的框架，仅包含最重要的库和功能。这使得它非常适合开发高性能REST API。此外，它比Martini快四十倍。

你可以添加中间件、嵌套组、JSON验证以及渲染，并依然保持其最佳性能。Gin Gonic使用httprouter，Go语言最快的HTTP路由器。

5.Buffalo
要构建Go语言新的Web应用程序，使用Buffalo是一个快速又简单的方法。当你开始一个新项目时，Buffalo可以为你提供一切——从前端到后端开发。

它具有热重载功能，这意味着dev命令将自动查看.go和.html文件。然后，它将为你重建并重启二进制文件。运行dev命令，你就能看到变化在你的眼前发生！

Buffalo不仅仅是一个框架——它也是一个整体的Web开发生态系统，可以让你直接构建应用程序。

6.Goji
Goji是一个轻量级的快速Web框架，将可组合性和简单性作为其主要优先级。很像net / http.ServeMux，Goji是一个极简的HTTP请求复用器。它包括Einhorn支持，允许在Goji中提供Websocket支持。

其他功能包括URL模式，可重新配置的中间件堆栈，正常关机等。Goji可以用于生产，并在若干组织中提供了数以亿计个请求。

7.Tiger Tonic
受Dropwizard启发，Tiger Tonic是开发JSON Web服务和构建高性能REST API的Go框架。为了忠于Golang的原则，Tiger Tonic努力保持正交特性。

Tiger Tonic的缺点在于构建大型后端应用程序尚有不足之处。

8. Gocraft
这是又一个强大而简约的框架，Gocraft提供快速和可扩展的路由性能。它将路由添加来自标准库的net / http包中。

Gocraft是一个Go mux和中间件软件包，具有强大的投射和反射能力，可以静态输入代码。你还可以使用内置中间件添加可选功能或者自己编写。

由于性能始终是开发人员最关心的问题之一，所以Gocraft是开发人员的绝佳选择。而且使用Gocraft框架编写后端Web应用程序很容易。

9.Mango
虽然Mango没有得到创作者Paul Bellamy的积极维护，但Go语言的许多用户仍然在使用它。Mango的优势在于它的模块化。你可以从各种库中选择，以包含在你的项目中。

Mango让你可以尽可能快速又轻松地构建可重复使用的HTTP功能模块。它将一系列中间件和应用程序编译成单个HTTP服务器对象，以保持代码独立。

Golang的集成开发环境（IDE）
Golang的IDE随着Go语言的普及越来越受大家的欢迎。虽然还是有许多开发人员仍然喜欢使用文本编辑器，但也有很多开发人员更倾向于使用IDE。

如果你正工作于具有广泛代码库的大型项目，那么IDE可以帮助你轻松组织代码和导航。此外，IDE可以帮助你测试代码并相应地编辑。

以下是用Golang工作良好的顶尖IDE。

1.Gogland
软件开发公司JetBrains发布了另一个可靠的IDE，这次是针对Golang发布的。Gogland是一个商业IDE，为Go开发人员提供了一个强大的人机工程学环境。它还具有编码协助、调试器和集成终端的功能。

由于Gogland是由一家已成立的公司创建的，所以它拥有广泛的IntelliJ插件生态系统，让你可以在需要更多工具的时候获得更多。

2. Visual Studio Code
由Microsoft创建的Visual Studio Code是一个功能齐全的开源IDE和代码编辑器，支持各种各样的编程语言。它的特点是智能完成；使用断点调用、调用堆栈和交互式控制台调试；内置Git集成；以及分层文件夹和文件浏览器。

作为另一个流行的IDE，Visual Studio Code有一个Go开发人员定期贡献的支持社区。使用Visual Studio Code，你可以使用可用插件数组来扩展功能。

3. LiteIDE
LiteIDE是五年多前创建的首个以Golang为中心的开源IDE。作为具有独特外观的C
++
Qt应用程序，LiteIDE提供代码管理、可配置构建命令、gdb和Delve调试器，使用WordApi——基于MIME类型的系统——自动完成和创建等等。它还提供JSON和Golang支持。

4.Wide
Wide是Golang程序员使用的基于Web的IDE。它专为协作开发而设计，适用于团队和Web开发机构。Wide功能包括代码高亮、调试、Git集成等。

因为Wide是由一名中国开发者创建和维护的，所以其大部分文档和支持是中文的。

5.带有Go-Plus插件的Atom
如果你已经在使用Atom，那么你可以通过一个名为go-plus的开源软件包来改善Golang语言的代码编辑体验。使用go-plus，你可以立即获得关于语法和构建错误的实时反馈。

Go-plus软件包提供了几乎所有Atom中对Golang的支持。它还可以用于工具，构建流程，linters，vet和coverage工具。

Go-plus还包括各种代码片段和功能，如gocode的自动完成，gofmt、goreturns或goimports等的代码格式化。

6.带有GoClipse的Eclipse
由于Eclipse是广受欢迎的IDE，因此我们为其创建了许多插件。GoClipse是针对Golang的Eclipse插件，提供Go源代码编辑，具有可配置的语法高亮和自动缩进以及大括号完成功能。

GoClipse还可以作为项目向导和构建器来立即报告语法和构建错误。GoClipse的其他功能包括调试功能和代码辅助。

7.带有GoSublime的Sublime Text
Sublime Text也是一个复杂的文本编辑器，具有大量的贡献者和开发者社区。因此，开发者为此IDE创建了各种各样的插件。

GoSublime是Sublime Text 3针对Golang的插件，在你编写代码时，提供来自Gocode的代码完成，lint /语法检查，自动添加和删除程序包导入，等等。

8.带有Vim-Go插件的Vim
Vim是一个免费的开源IDE，可以定制和配置各种插件。如果你是Golang程序员，那么你可以使用Vim中由Fatih Arslan创建的vim-go插件。Vim-go自动安装所有必需的二进制文件，为Golang提供平滑的Vim集成。

Vim-go是一款功能强大的插件套件，用于撰写和开发Go。其功能包括高级源代码分析，添加和删除导入路径，多次第三方支持，goto定义，快速文件执行等等。

Vim-go是高度可定制的，可以根据你的需要启用或禁用各种功能。

9.Komodo
Komodo是一个全功能的Go语言IDE，并且支持如Node.js，Python，Ruby，Perl等其他编程语言。使用这个Go
IDE，你可以轻松地编写干净的代码。其功能包括高级代码编辑器，智能代码完成，语法检查，版本控制和单元测试，以及允许代码浏览和代码提示的Go
Code Intelligence。

Komodo的优点是，它可以很好地协助团队合作，因为允许多个开发人员同时编辑文档。只要一个许可证，Komodo就可以安装在Mac，Windows或Linux上。

10. 带有Go语言（http://golang.org）支持插件的IntelliJ IDEA
IntelliJ IDEA（由JetBrains公司开发）是可以通过Go语言支持插件从而使用Golang的IDE。如果你想要在IntelliJ IDEA中使用Golang，那么你需要安装此插件，虽然不同于Gogland，它的功能有限。

Golang工具
Golang工具可用于各种项目和Web应用程序。使用这些有用的工具可以帮助开发人员尽可能快速而轻松地编写代码并构建应用程序。

这里有一系列顶级的Golang工具以供参考。

1.Apicompat
Apicompat是一种新的Go语言工具，可帮助开发人员检测向后不兼容的更改和导出的声明。

你可以通过Apicompat避免误报。但是，Apicompat并不能检测到每个向后不兼容的变化。并且，库作者没有考虑到交换参数和其他更改的需要。

2.Checkstyle
受Java Checkstyle启发，针对Golang的Checkstyle输出编码风格的建议。它还允许开发人员检查文件行/函数和行/参数号，然后由用户进行配置。

3.Depth
又一个有用的Golang工具，Depth可帮助Web开发人员检索和可视化Go源代码依赖关系树。它可以用作独立的命令行应用程序或作为项目中的特定包。你可以通过在解析之前在Tree上设置相应的标志来添加自定义。

4.Go-Swagger
该工具包包括各种功能和功能。Go-Swagger是Swagger 2.0的一个实现，可以序列化和反序列化swagger规范。它是RESTful API简约但强大的代表。

通过Go-Swagger，你可以swagger规范文档，验证JSON模式以及其他额外的规则。其他功能包括代码生成，基于swagger规范的API生成，基于代码的规范文档生成，扩展了的字符串格式，等等。

5.Go Meta Linter
如果你需要运行Go lint工具并同时使其输出正常化，那么Go Meta Linter可以为你办到。Go Meta Linter旨在与文本编辑器或IDE集成，如如Sublime
Linter插件，Atom go-plus包，Emacs Flycheck检查器，Vim / Neovim，以及Go for Visual
Studio Code一起使用。它还支持各种各样的linter和配置文件，如JSON。

6.Go-callvis
Go-callvis是一个Web开发工具，允许你使用Graphviz的点格式可视化Go程序的调用图。此工具在构建具有复杂代码库的大型项目时特别有用。它在你想要了解另一个开发人员的代码结构或重建别人的项目时，也很有用。

通过go-callvis，开发人员可以在程序中关注特定包；根据软件包的分组函数和根据类型的方法；以及将软件包限制到自定义路径前缀，并忽略那些包含它们的自定义前缀。

7.Gonative
Gonative是一个简单的Golang工具，让你能够使用本机库构建Go工具链，而这可以在使用stdlib软件包的Cgo-enabled版本时进行交叉编译。

Gonative为每个平台下载二进制发行版，并将它们的库复制到正确的位置。同时，Gonative设置正确的mod时间，以避免不必要的重建。

不幸的是，Gonative在Windows上仍然未经测试。此外，也没有提供Linux / arm支持。

8.Grapes
Grapes是一种轻量级的Golang工具，旨在轻松地通过SSH分发命令。它由Yaron Sumel编写和积极维护。

Grapes不久将支持完整的主机密钥验证，这是开发人员应该注意到的。

9.Gosimple
Golang linter的伟大之处在于它专注于简化Go源代码。Gosimple始终将最新的Go版本作为目标，因此它需要Go 1.6或更高版本。

如果有新的Go版本，gosimple会建议最轻松和最简单的方法来避免复杂的构造。

10.Go Vendor
Go Vendor是与标准Vendor文件夹兼容的Golang工具。它允许开发人员通过govendor
add / update从$GOPATH中复制现有的依赖关系。你还可以通过govendor
fetch直接提取新的依赖关系或更新现有的依赖关系，以及使用govendor迁移来移动旧的系统。

总结
如果你有JS / Node背景，那么你还需要学习一些新的编程概念，如协同程序，通道，严格的类型与编译，接口，结构，指针和其他一些差异。但是，一旦你进入状态，你会发现Golang用起来更容易，也更快。



注：译文链接：http://www.codeceo.com/article/golang-framework-ide-tools.html，英文原文：Golang Guide: A List of Top Golang Frameworks, IDEs, and Tools，翻译作者：码农网 – 小峰，转载请注明出处。做一只勤劳的IT干货搬运工，喜欢就给个赞呗。
