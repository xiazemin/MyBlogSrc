---
title: shell $(( ))、$( )、``与${ }的区别
layout: post
category: linux
author: 夏泽民
---
$( )与` `（反引号）都是用来作命令替换的。
命令替换与变量替换差不多，都是用来重组命令行的，先完成引号里的命令行，然后将其结果替换出来，再重组成新的命令行。
<!-- more -->
$( )与｀｀
在操作上，这两者都是达到相应的效果，但是建议使用$( )，理由如下：

｀｀很容易与''搞混乱，尤其对初学者来说，而$( )比较直观。
最后，$( )的弊端是，并不是所有的类unix系统都支持这种方式，但反引号是肯定支持的。

 echo Linux `echo Shell `echo today is `date "+%Y-%m-%d"```
  #过多使用``会有问题
   #多个$()同时使用也不会有问题
    ``和$()混合使用
    
${ }变量替换
一般情况下，$var与${var}是没有区别的，但是用${ }会比较精确的界定变量名称的范围


先赋值一个变量为一个路径，如下：
file=/dir1/dir2/dir3/my.file.txt
${file#*/}    拿掉第一条 / 及其左边的字符串    dir1/dir2/dir3/my.file.txt
${file##*/}    拿掉最后一条 / 及其左边的字符串    my.file.txt
[root@localhost ~]# echo ${file##*/}
my.file.txt
${file%/*}    拿掉最后一条 / 及其右边的字符串    /dir1/dir2/dir3
[root@localhost ~]# echo ${file%/*}
/dir1/dir2/dir3
${file%%/*}    拿掉第一条 / 及其右边的字符串    (空值)
[root@localhost ~]# echo ${file%%/*}
(空值)

命令                                    解释                           　　 结果
${file:0:5}            　　　提取最左边的 5 个字节    　　　　　　　　　　　　/dir1
${file:5:5}            　　　提取第 5 个字节右边的连续 5 个字节    　　　　　/dir2
${file/dir/path}            将第一个 dir 提换为 path    　　　　　　　　　 /path1/dir2/dir3/my.file.txt
${file//dir/path}    　　　　将全部 dir 提换为 path    　　　　　　　　　　　/path1/path2/path3/my.file.txt
${#file}    　　　　　　　　　 获取变量长度    　　　　　　　　　　　　　　　　　27  

命令	解释	备注
${file-my.file.txt}	若 $file 没设定,则使用 my.file.txt 作传回值	空值及非空值不作处理
${file:-my.file.txt}	若 $file 没有设定或为空值,则使用 my.file.txt 作传回值	非空值时不作处理
${file+my.file.txt}	若$file 设为空值或非空值,均使用my.file.txt作传回值	没设定时不作处理
${file:+my.file.txt}	若 $file 为非空值,则使用 my.file.txt 作传回值	没设定及空值不作处理
${file=txt}	若 $file 没设定,则回传 txt ,并将 $file 赋值为 txt	空值及非空值不作处理
${file:=txt}	若 $file 没设定或空值,则回传 txt ,将 $file 赋值为txt	非空值时不作处理
${file?my.file.txt}	若 $file 没设定,则将 my.file.txt 输出至 STDERR	空值及非空值不作处理
${file:?my.file.txt}	若 $file没设定或空值,则将my.file.txt输出至STDERR	非空值时不作处理

${A[@]}	返回数组全部元素	a b c def
${A[*]}	同上	a b c def
${A[0]}	返回数组第一个元素	a
${#A[@]}	返回数组元素总个数	4
${#A[*]}	同上	4
${#A[3]}	返回第四个元素的长度，即def的长度	3
A[3]=xzy	则是将第四个组数重新定义为 xyz	 
$(( ))与整数运算

$(( ))可以将其他进制转成十进制数显示出来。用法如下：
echo $((N#xx))
其中，N为进制，xx为该进制下某个数值，命令执行后可以得到该进制数转成十进制后的值。

[root@localhost ~]# echo $((2#110))
6
