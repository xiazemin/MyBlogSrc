---
title: Nginx URL重写（rewrite）
layout: post
category: nginx
author: 夏泽民
---
rewrite是实现URL重写的关键指令，根据regex（正则表达式）部分内容，重定向到replacement，结尾是flag标记。

rewrite语法格式及参数语法说明如下:
rewrite    <regex>    <replacement>    [flag];

    关键字      正则        替代内容          flag标记

    关键字：其中关键字error_log不能改变

    正则：perl兼容正则表达式语句进行规则匹配

    替代内容：将正则匹配的内容替换成replacement

    flag标记：rewrite支持的flag标记

flag标记说明：

last  #本条规则匹配完成后，继续向下匹配新的location URI规则

break  #本条规则匹配完成即终止，不再匹配后面的任何规则

redirect  #返回302临时重定向，浏览器地址会显示跳转后的URL地址

permanent  #返回301永久重定向，浏览器地址栏会显示跳转后的URL地址

 rewrite参数的标签段位置：

server,location,if
例子：
rewrite ^/(.*) http://www.lidasoft.cc/$1 permanent;
说明：                                        

rewrite为固定关键字，表示开始进行rewrite匹配规则

regex部分是 ^/(.*) ，这是一个正则表达式，匹配完整的域名和后面的路径地址

replacement部分是http://www.lidasoft.cc/$1 $1，是取自regex部分()里的内容。匹配成功后跳转到的URL。

flag部分 permanent表示永久301重定向标记，即跳转到新的 http://www.lidasoft.cc/$1 地址上

regex 常用正则表达式说明
字符

描述

\

将后面接着的字符标记为一个特殊字符或一个原义字符或一个向后引用。如“\n”匹配一个换行符，而“\$”则匹配“$”

^

匹配输入字符串的起始位置

$

匹配输入字符串的结束位置

*

匹配前面的字符零次或多次。如“ol*”能匹配“o”及“ol”、“oll”

+

匹配前面的字符一次或多次。如“ol+”能匹配“ol”及“oll”、“oll”，但不能匹配“o”

?

匹配前面的字符零次或一次，例如“do(es)?”能匹配“do”或者“does”，"?"等效于"{0,1}"

.

匹配除“\n”之外的任何单个字符，若要匹配包括“\n”在内的任意字符，请使用诸如“[.\n]”之类的模式。

(pattern)

匹配括号内pattern并可以在后面获取对应的匹配，常用$0...$9属性获取小括号中的匹配内容，要匹配圆括号字符需要ContentContent
rewrite 企业应用场景
Nginx的rewrite功能在企业里应用非常广泛：

u 可以调整用户浏览的URL，看起来更规范，合乎开发及产品人员的需求。

u 为了让搜索引擎搜录网站内容及用户体验更好，企业会将动态URL地址伪装成静态地址提供服务。

u 网址换新域名后，让旧的访问跳转到新的域名上。例如，访问京东的360buy.com会跳转到jd.com

u 根据特殊变量、目录、客户端的信息进行URL调整等
<!-- more -->
https://blog.csdn.net/tojinzi/article/details/119837993

ngress 配置中关于重写的注解有：

注解名	描述
nginx.ingress.kubernetes.io/app-root	访问主域名的时候会自动跳转到app-root注解指定的路径
nginx.ingress.kubernetes.io/rewrite-target	将匹配到的url重定向到rewrite-target注解指定的路径
nginx.ingress.kubernetes.io/server-snippet	使用注解可以在server{...}配置块中添加自定义的配置
nginx.ingress.kubernetes.io/configuration-snippet	使用该注解可以在Nginx的location{...}位置添加额外配置

https://blog.csdn.net/zhongliwen1981/article/details/122319993