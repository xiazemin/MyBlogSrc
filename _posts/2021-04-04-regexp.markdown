---
title: regexp
layout: post
category: golang
author: 夏泽民
---
package main

import ( "fmt" "regexp" )

func main() {
 re := regexp.MustCompile("a(x*)b") fmt.Println(re.ReplaceAllString("-ab-axxb-", "T")) 

reg:= regexp.MustCompile("[^\u4E00-\u9FFFa-zA-Z0-9]+") ret := reg.ReplaceAllString("wo ；；。。12129。是中。。。。过，。。！", " ") 

reg:= regexp.MustCompile("/[^\u4E00-\u9FFFa-zA-Z0-9]+/") fmt.Println(ret) }

-T-T- wo 12129 是中 过

通过上面的例子我们可以看到，golang的正则表达式和node的正则表导师不一样，没有开头和结尾的/

<!-- more -->
ReplaceAllLiteral返回src的一个拷贝，将src中所有re的匹配结果都替换为repl。在替换时，repl中的'$'符号会按照Expand方法的规则进行解释和替换，例如$1会被替换为第一个分组匹配结果。


https://blog.csdn.net/weixin_34309435/article/details/88016193

判断是否中文
if unicode.Is(unicode.Han, v)

https://www.jb51.net/article/179055.htm

https://blog.csdn.net/tan_000/article/details/83273591
 regexp.MustCompile("^[\u4e00-\u9fa5]$")
https://segmentfault.com/q/1010000000595663
