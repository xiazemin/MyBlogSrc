---
title: kcat
layout: post
category: storage
author: 夏泽民
---
https://github.com/edenhill/kcat

kafkacat 是基于kafka C语言的librdkafka库的 kafka客户端，不依赖java，小巧轻便，支持主流系统。
在高版本的debain、Ubuntu下可以直接apt-get install kafkacat，maxos下可以用brew install kafkacat
也可以自己编译，也是非常简单(需要先安装好curl和 cmake)
apt-get install cmake
git  clone https://github.com/edenhill/kafkacat
cd kafkacat && ./bootstrap.sh
<!-- more -->
1、查看kafka信息(kafka_broker表示kafka服务器的地址，下同）
kafkacat -L -b kafka_broker

2、消费者 
a、订阅所有消息
kafkacat -C -b kafkabroker -t topicname
b、读取制指定个数的消息（可以查看kafka里是否有消息）
kafkacat -C -b kafkabroker -t topicname -p 0 -o -个数 -e  

3、生产者
a、直接发送  按下enter键后，等待连接成功就可以发送消息了,ctrl+d 退出发送消息
kafkacat -b kafkabroker -t topic  -P
b、通过管道发送
cat msg.txt |  kafkacat -b kafkabroker -t topic  -P

4、转发消息 
可以通过管道把接收到的消息转发到生产者
kafkacat -C -b kafkabroker1 -t topic1 -e | kafkacat -P -b kafkabroker2 -t topic2

5、配置
kafkacat 使用的是librdkafka的配置，使用时可以通过 '-F'指定配置文件。
比如 SASL_PLAINTEXT登录，新建一个配置文件, 如 kafka.conf

security.protocol=SASL_PLAINTEXT
sasl.mechanisms=PLAIN
sasl.username=username
sasl.password=pwd

kafkacat -L -b kafka_broker -F kafka.conf

https://www.cnblogs.com/xdao/p/10674848.html

Kafka监控管理平台之CMAK原Apache Kafka 的集群管理器

CMAK 支持以下内容：
管理多个集群
轻松检查集群状态（主题、消费者、偏移量、代理、副本分布、分区分布）
运行首选副本选举
使用选择要使用的代理的选项生成分区分配
运行分区的重新分配（基于生成的分配）
使用可选主题配置创建主题（0.8.1.1 与 0.8.2+ 具有不同的配置）
删除主题（仅支持 0.8.2+ 并记住在代理配​​置中设置 delete.topic.enable=true）
主题列表现在指示标记为删除的主题（仅支持 0.8.2+）
批量生成多个主题的分区分配，可选择要使用的代理
批量运行多个主题的分区重新分配
将分区添加到现有主题
更新现有主题的配置
（可选）为代理级别和主题级别指标启用 JMX 轮询。
可选地过滤掉在 zookeeper 中没有 ids/owners/&offsets/ 目录的消费者。

https://blog.csdn.net/yu7888/article/details/120437924

https://chromium.googlesource.com/external/github.com/grpc/grpc-go/+/HEAD/clientconn.go
