---
title: Protobuf3  Oneof
layout: post
category: golang
author: 夏泽民
---
如果您有一条包含许多字段的消息，并且最多同时设置一个字段，您可以使用其中oneof功能来强制执行此行为并节省内存。

  Oneof 字段类似于常规字段，除了Oneof共享内存的所有字段之外，最多可以同时设置一个字段。设置Oneof 的任何成员都会自动清除所有其他成员。您可以使用case()或WhichOneof()方法检查Oneof 中的哪个值被设置(如果有的话)，具体取决于您选择的语言。
<!-- more -->
Oneof功能
  设置oneof字段将自动清除oneof字段的所有其他成员。因此，如果您设置了几个oneof字段，则只有最后一个字段仍然有值。

SampleMessage message;
message.set_name("name");
CHECK(message.has_name());
message.mutable_sub_message();   // Will clear name field.
CHECK(!message.has_name());
  如果解析器遇到同一oneof的多个成员，则在解析的消息中只使用最后一个成员。

  oneof不能重复。


https://www.kaifaxueyuan.com/basic/protobuf3/oneof.html