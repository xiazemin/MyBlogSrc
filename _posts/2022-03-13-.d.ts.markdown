---
title: .d.ts
layout: post
category: node
author: 夏泽民
---
用 ts 写的模块在发布的时候仍然是用 js 发布，这就导致一个问题：ts 那么多类型数据都没了，所以需要一个 d.ts 文件来标记某个 js 库里面对象的类型

然后 typings 就是一个网络上的 d.ts 数据库

推荐一个可以帮助自动生成 .d.ts文件的npm包

dts-generator

https://github.com/SitePen/dts-generator


<!-- more -->
https://www.zhihu.com/question/52068257
前言#
当我们在TS文件中需要引入外部库时，编译时是无法判断传入参数的类型的，所以我们需要在引入前加入一个声明文件来帮助ts判断类型。
当然现在大部分库都自带有自己的声明文件，一般在@types目录下。

使用场景#
在ts文件中对引用的外部库做类型判断；
制作npm包时，书写自己的声明文件，需要在package.json的typing/types字段注册声明文件的路径；
不使用ts时，也可以添加声明文件与（自己的）的模块存放在同一目录下，简单做一下数据结构体，对IDE参数声明也有用哦；
引用声明文件的几种方法#
与调用的ts文件放在同一目录下；
在声明文件tsconfig.json的include/files字段下添加声明文件的路径;

https://www.cnblogs.com/xpengp/p/12787239.html
https://segmentfault.com/a/1190000009247663


npm install dts-generator

Generate your d.ts bundle:

Programmatically:

require('dts-generator').default({
		name: 'package-name',
		project: '/path/to/package-directory',
		out: 'package-name.d.ts'
});
Command-line:

dts-generator --name package-name --project /path/to/package-directory --out package-name.d.ts

