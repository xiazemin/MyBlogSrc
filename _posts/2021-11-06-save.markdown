---
title: docker save load export import区别详解
layout: post
category: docker
author: 夏泽民
---
docker save 用来将一个或多个image打包保存。

如：将本地镜像库中的image1和image2打包到images.tar中

docker save -o images.tag  image1:v1 image2:v1
docker save 也可以打包container，保存的是容器背后的image.

docker load用于将打包的tar中包含的镜像load到本地镜像库，但不能重命名其中的镜像名。

docker load -i images.tar
docker export 打包container文件系统

docker export -o thecontainer.tar container_name
使用 docker import 载入，可以为新镜像指定name和tag

docker import thecontainer.tar newimagename:tag
总结一下

docker save保存的是镜像（image），docker export保存的是容器（container）；
docker load用来载入镜像包,必须是一个分层文件系统，必须是是save的包；
docker import用来载入容器包，但两者都会恢复为镜像；
docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。
docker export的包会比save的包要小，原因是save的是一个分层的文件系统，export导出的只是一个linux系统的文件目录

https://blog.csdn.net/enter89/article/details/89291681
<!-- more -->
利用 Docker 19.03 引入的插件 buildx，可以很轻松地构建多平台 Docker 镜像。buildx 是 docker build ... 命令的下一代替代品，它利用 BuildKit 的全部功能扩展了 docker build 的功能。

下面就来演示一下如何在短短几分钟内使用 buildx 构建出不同平台的 Docker 镜像。
https://blog.csdn.net/alex_yangchuansheng/article/details/103343697/
