---
title: buffer pipe
layout: post
category: golang
author: 夏泽民
---
1. 难以用 string，或者 byte 数组 收集数据
2. 数据Source 端，不断的有数据产生
3. 数据缓冲，如果占有的 内存太多， 可能导致 服务崩溃

首先，对于 这种简单的 流数据， golang 提供了一个 结构。
pipeReader, pipeWriter := io.Pipe()

这个方法的原型是这样的 
func Pipe() (*PipeReader, *PipeWriter)
它返回紧密相连的一对 Reader 和 Writer。 他们的“生命周期”相同。
任何 写到 Writer中的数据， 直接流到了Reader中。这个 和 Linux 命令行中 “管道 |” 很像。
<!-- more -->
iopipe 直接 对接了 日志输出， 缓冲很小，
处理后的结果， 直接输出到 http 客户端。

https://blog.csdn.net/XuYongshi02/article/details/79107842

