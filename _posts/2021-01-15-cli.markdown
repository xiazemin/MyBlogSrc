---
title: cli
layout: post
category: node
author: 夏泽民
---
首先，使用 JavaScript 语言，写一个可执行脚本 hello 。


#!/usr/bin/env node
console.log('hello world');
然后，修改 hello 的权限。


$ chmod 755 hello
现在，hello 就可以执行了。


$ ./hello
hello world
如果想把 hello 前面的路径去除，可以将 hello 的路径加入环境变量 PATH。但是，另一种更好的做法，是在当前目录下新建 package.json ，写入下面的内容。


{
  "name": "hello",
  "bin": {
    "hello": "hello"
  }
}
然后执行 npm link 命令。


$ npm link
现在再执行 hello ，就不用输入路径了。


$ hello
hello world
<!-- more -->
脚本可以通过 child_process 模块新建子进程，从而执行 Unix 系统命令。


#!/usr/bin/env node
var name = process.argv[2];
var exec = require('child_process').exec;

var child = exec('echo hello ' + name, function(err, stdout, stderr) {
  if (err) throw err;
  console.log(stdout);
});
用法如下。


$ ./hello tom
hello tom
四、shelljs 模块
shelljs 模块重新包装了 child_process，调用系统命令更加方便。它需要安装后使用。


npm install --save shelljs
然后，改写脚本。


#!/usr/bin/env node
var name = process.argv[2];
var shell = require("shelljs");

shell.exec("echo hello " + name);
上面代码是 shelljs 的本地模式，即通过 exec 方法执行 shell 命令。此外还有全局模式，允许直接在脚本中写 shell 命令

http://www.ruanyifeng.com/blog/2015/05/command-line-with-node.html

https://www.jianshu.com/p/62a0e8054da0
