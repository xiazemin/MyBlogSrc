---
title: function 匿名函数
layout: post
category: node
author: 夏泽民
---
基本用法：
ES6中允许使用“箭头”(=>)定义函数

var f   = v => v; 
1
上面代码相当于：

var function(v){
    return v;
}
1
2
3
根据箭头函数有参数和无参数来区分
1、无参数的箭头函数

var f = ()=>5;
1
2
等同于

var function(){
    return 5;
}
1
2
3
<!-- more -->
2、有参数的箭头函数

var sum = (a,b)=>a+b;
1
等同于

var sum=function(a,b){
    return a+b;
}
1
2
3
有的函数体内的语句大于一条的话，它的写法如下使用一个大括号将其括起来，并使用return语句返回

var sum = (a,b) => {return a+b;}
1
由于大括号被解释为代码块，所以如果箭头函数直接返回一个对象时，必须在对象外面加一个大括号

var getFunctipn = id => ({id:id,name:"nodejs"})
1
箭头函数也可以与变量解构结合使用：

const full = ({first, last}) => first +"  "+ last;
1
等同于

const full=function(persion){
    return persion.first+" "+persion.last;
}
1
2
3
使用箭头函数可以让函数表达的更加简洁
箭头函数的一个用处是简化回调函数

[1,2,3].map(function(x){  
    return x*x;  
});  
1
2
3
等同于

[1,2,3].map(x=>x*x)
1
另一个例子

var result = values.sort(function(a, b){  
    return a -b;  
});
1
2
3
等同于

var result = values.sort((ab)=>a-b)
1
使用rest参数与箭头函数结合的例子

const numbers = (...nums) => nums;  
numbers(1,2,3,4,5,6,7,8,9); //[1,2,3,4,5,6,7,8,9] 

const headAndTail = ( head, ...tail) => [head, tail];  
headAndTail(1,2,3,4,5,6,7,8,9);// [1, [2,3,4,5,6,7,8,9]]