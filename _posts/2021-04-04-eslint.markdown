---
title: eslint
layout: post
category: node
author: 夏泽民
---
Line 7:9:  Parsing error: Unexpected token

解决方案：
1.eslint 配置 babel-eslint 插件
cnpm install babel-eslint --save
2.在package.json中配置 eslintConfig 属性
"eslintConfig": {
 "parser": "babel-eslint"
 }
<!-- more -->
https://stackoverflow.com/questions/36001552/eslint-parsing-error-unexpected-token

如果还是解决不了，检查下eslint 和 babel的版本

vscode里安装eslint和vetur插件，全局安装eslint，并在项目根目录中eslint --init

二、Cannot find module 'eslint-config-standard'...或者安装module失败
解决：全局安装错误提示中的包，例如上面错误，就npm i -g eslint-config-standard，删除.eslintrc.js文件，重新在项目根目录中eslint --init，并重启vscode。

https://www.cnblogs.com/macq/p/8038930.html

npm批量安装需要的模块
如果要同时安装很多模块，就要输入多行命令，而且在团队开发中每个人都要这么做一边，虽然不是什么大事，但就是麻烦。

npm通过“package.json”文件支持批量安装。这个文件里可以描述依赖的模块，并且可以指定模块的版本。

在当前目录中建一个“package.json”文件，文件内容：

{
  "dependencies": {
    "express": "3.2.2",
    "ejs": "*",
    "mongodb": ">=0.9.9"
  }
}
然后在命令行的当前目录下执行：

npm i
https://blog.csdn.net/kongxh_1981/article/details/48972681

解决 npm 无法安装 devDependencies 下的依赖包的问题

解决方法
npm 有个默认配置项 production （生产）设置为 true 时就不会安装 devDependencies 下的依赖包。

// 配置成 false，意思是不在生产环境下

https://www.jianshu.com/p/a00e500f7aff


在package.json中有两个字段：

dependencies：是在生产环境中运行需要的安装包。

devDependencies：是在开发环境中需要安装的依赖包。

执行npm install，以上两种依赖包都会安装，如果执行以下线上部署命令，则只会安装dependencies中的包：

// 本地开发
npm install

// 线上部署
npm install --production
NODE_ENV=production npm install

如果在安装一个包的时候，想保存到package.json中，可以执行以下命令：

npm install --save-prod // 保存到 dependencies
npm install -P // 保存到 dependencies

npm install --save-dev // 保存到 devDependencies
npm install -D // 保存到 devDependencies

https://zhuanlan.zhihu.com/p/116453207

https://www.samyoc.com/single/2532

如果上述问题还是解决不了
npm run lint 代替eslint 命令，问题解决

cnpm install babel-eslint --save 
cnpm install eslint@4.2.0 --save -g cnpm install --save-dev
eslint eslint-config-defaults
 cnpm i -g eslint-config-standard 
 cnpm i eslint-plugin-import@latest -g --save-dev
 cnpm i eslint-plugin-node@latest -g --save-dev
  
 cnpm i eslint-plugin-promise@latest -g --save-dev
 
 npm run lint


