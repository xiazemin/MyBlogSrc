---
title: package.json
layout: post
category: node
author: 夏泽民
---
使用 package.json
package.json 位于模块的目录下，用于定义包的属性。

Package.json 属性说明
name - 包名。

version - 包的版本号。

description - 包的描述。

homepage - 包的官网 url 。

author - 包的作者姓名。

contributors - 包的其他贡献者姓名。

dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。

repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。

main - main 字段指定了程序的主入口文件，require('moduleName') 就会加载这个文件。这个字段的默认值是模块根目录下面的 index.js。

keywords - 关键字
<!-- more -->
通过npm init -y 初始化 npm；-y表示初始化npm的时候使用默认配置，不用再问我那一堆问题了

初始化后，会在当前目录生成一个package.json文件，文件里头其实就是标准的json对象，并且可以修改


外插件安装后，安装的插件所对应的信息也会写到package.json里
如果要更新成旧的版本，可使用@指定版本号

npm update jquery@3.0.0
而package-lock.json的作用就是用来保证我们的应用程序依赖之间的关系是一致的, 兼容的.

 

　　当不存在package-lock.json文件时，使用npm install时，会自动生成这个文件。当存在这个文件时，使用npm install安装，会安装package-lock.json里指定版本的插件，而且相比没有package-lock.json文件时，安装速度会快很多。因为package-lock.json文件里已经存在插件的版本、下载地址、整个node_modules的结构等信息。

　　当存在package-lock.json文件时，每次npm install安装就会安装package-lock.json里对应插件的版本。这样同一份package-lock.json文件，大家安装的插件版本一致。

　　如果某个插件版本变更。又不想删除package-lock.json文件，重新生成。方法是：npm install plugin@version，及重新安装这个插件，并指定插件的版本，这样，package.json和package-lock.json会自动更新。当然，也可以直接修改package-lock.json文件，这样npm install时，也会安装修改后的版本。但是如果只修改package.json，不修改package-lock.json，npm install还是会安装package-lock.json里的插件版本。