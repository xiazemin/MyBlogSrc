---
title: 非阻塞套接字
layout: post
category: linux
author: 夏泽民
---
在阻塞和非阻塞两种模式下执行I/O操作。在阻塞模式下，在I/O操作完成前，执行的操作函数一直等候而不会立即返回，该函数所在的线程会阻塞在这里。相反，在非阻塞模式下，套接字函数会立即返回，而不管I/O是否完成，该函数所在的线程会继续运行。

  Windows套接字程序使用“生产者-消费者”模式来解决上述问题。在程序中，“生产者”读入数据，“消费者”根据需求对读入数据进行处理。通常“生产者”和“消费者”存在于两个线程中，当“生产者”完成读入数据时，使用线程同步机制，例如设置一个事件通知“消费者”，“消费者”接收到这个事件后对读入的数据进行处理。
<!-- more -->
把套接字设置为非阻塞模式，即通知系统内核：在调用Windows Sockets API时，不要让线程睡眠，而应该让函数立即返回。在返回时，该函数返回一个错误代码。图所示，一个非阻塞模式套接字多次调用recv()函数的过程。前三次调用recv()函数时，内核数据还没有准备好。因此，该函数立即返回WSAEWOULDBLOCK错误代码。第四次调用recv()函数时，数据已经准备好，被复制到应用程序的缓冲区中，recv()函数返回成功指示，应用程序开始处理数据

https://www.pianshen.com/article/9546465600/

https://blog.51cto.com/wangningyu/3248385

https://blog.csdn.net/luedipiaofeng/article/details/1651447

普通套接字一次只能服务一个客户端，而且若无客户端连接，accept（）一直阻塞，无数据传输，recv一直阻塞，传输效率极低。

https://blog.csdn.net/weixin_42089175/article/details/81607558

