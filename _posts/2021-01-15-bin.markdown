---
title: bin
layout: post
category: node
author: 夏泽民
---
npm install --save-dev node-sass
1
安装好依赖后， node_modules 文件夹下 .bin 就出现了node-sass 文件，

直接使用相对路径来调用安装的包./node_module/node-sass css/test.scss -o dist/ 。

此外我们还可以在package.json文件中的script中加入

通过 npm run scss 执行这个命令，npm run命令会自动在环境变量$PATH添加node_modules/.bin目录，所以scripts字段里面调用命令时不用加上路径，这就避免了全局安装NPM模块。

npm run如果不加任何参数，直接运行，会列出package.json里面所有可以执行的脚本命令。

npm run会创建一个Shell，执行指定的命令，并临时将node_modules/.bin加入PATH变量，这意味着本地模块可以直接运行。
<!-- more -->
我们在使用 npm install 安装模块的模块的时候 ，一般会使用下面这几种命令形式：

1. npm installmoduleName # 安装模块到项目目录下

2. npm install-g moduleName # -g 的意思是将模块安装到全局，具体安装到磁盘哪个位置，要看 npm config prefix 的位置。

3. npm install-save moduleName # -save 的意思是将模块安装到项目目录下，并在package文件的dependencies节点写入依赖。

4.npm install-save-dev moduleName # -save-dev 的意思是将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖。

那么问题来了，在项目中我们应该使用四个命令中的哪个呢？这个就要视情况而定了。下面对这四个命令进行对比，看完后你就不再这么问了。

npm install moduleName 命令
1. 安装模块到项目node_modules目录下。

2. 不会将模块依赖写入devDependencies或dependencies 节点。

3. 运行 npm install 初始化项目时不会下载模块。

npm install -g moduleName 命令
1. 安装模块到全局，不会在项目node_modules目录中保存模块包。

2. 不会将模块依赖写入devDependencies或dependencies 节点。

3. 运行 npm install 初始化项目时不会下载模块。

npm install -save moduleName 命令
1. 安装模块到项目node_modules目录下。

2. 会将模块依赖写入dependencies 节点。

3. 运行 npm install 初始化项目时，会将模块下载到项目目录下。

4. 运行npm install --production或者注明NODE_ENV变量值为production时，会自动下载模块到node_modules目录中。

npm install -save-dev moduleName 命令
1. 安装模块到项目node_modules目录下。

2. 会将模块依赖写入devDependencies 节点。

3. 运行 npm install 初始化项目时，会将模块下载到项目目录下。

4. 运行npm install --production或者注明NODE_ENV变量值为production时，不会自动下载模块到node_modules目录中。


这几种安装方法要视具体情况而定：
npm install X:

会把X包安装到项目的node_modules目录中
会修改package.json的dependencies
之后运行npm install命令时，不会自动安装X
npm install -g X:

安装模块到全局，不会在项目node_modules目录中保存模块包。
不会将模块依赖写入devDependencies或dependencies 节点。
运行 npm install 初始化项目时不会下载模块。
npm install X ––save:

会把X包安装到node_modules目录中
会在package.json的dependencies属性下添加X
之后运行npm install命令时，会自动安装X到node_modules目录中
之后运行npm install ––production或者注明NODE_ENV变量值为production时，会自动安装msbuild到node_modules目录中,即是在线上环境运行时会将包安装
npm install X ––save-dev:

会把X包安装到node_modules目录中
会在package.json的devDependencies属性下添加X
之后运行npm install命令时，会自动安装X到node_modules目录中
之后运行npm install ––production或者注明NODE_ENV变量值为production时，不会自动安装X到node_modules目录中，即是在线上环境并不会进行安装。
使用原则:

devDependencies 节点下的模块是我们在开发时需要用的，比如项目中使用的 gulp ，压缩css、js的模块。这些模块在我们的项目部署后是不需要的，所以我们可以使用--save-dev的形式安装。像 express 这些模块是项目运行必备的，应该安装在 dependencies 节点下，所以我们应该使用--save的形式安装。
总结为一句话：运行时需要用到的包使用––save，否则使用––save-dev。

