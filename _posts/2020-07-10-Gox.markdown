---
title: Gox 使用内存虚拟文件系统提升IO处理速度
layout: post
category: golang
author: 夏泽民
---
Gox语言中，1.06a版本以上，可以利用内置的github.com/topxeq/afero包来将内存中虚拟出一个文件系统。这样，如果内存足够大，完全可以利用它来提升一些文件IO处理的效率。

该包实现的文件系统操作和Go语言（Golang）的os标准包中的基本保持一致，并提供了一些附加方法以便提高代码效率。

下面是内存虚拟文件系统的一些常规操作，包括新建文件系统、新建或删除文件、复制文件（包括在虚拟文件系统和真实文件系统之间复制）、创建目录和子目录等。
https://www.jianshu.com/p/102b33f56cc7
<!-- more -->
Gox语言是脱胎于Go语言（Golang）的开源脚本语言，解释执行，但相比Go语言更贴近高级语言，语法硬性限制也少一些；是一门偏向快速应用的语言，也可以说是一个集成工具；

Gox语言主要优势有三点：

第一，Gox语言本身只有一个可执行文件，绿色免配置，下载即可使用，无需安装Go语言环境，无需编译，非常适合快速制作原型以及云服务器上的远程开发；
第二，Gox中可以直接使用绝大多数Go语言标准库中的对象和方法函数，也内置了很多常用、优秀的第三方库，充分发挥Go语言多年积累的资源优势；
第三，与很多其他主流语言不同，Gox语言着力解决了GUI图形界面编程的问题，内置了基于Giu（imgui）、LCL、Sciter的三套图形界面编程库，直接可以进行快捷高效的图形界面开发（LCL、Sciter只需分别下载一个动态链接库文件，执行和分发时附带上即可），特别适合编写演示原型系统。
作为脚本语言，Gox语言性能肯定不如Go语言这样的编译型语言快，但由于Gox语言与Go语言的紧密联系，Gox语言编写的脚本可以很容易的改写成Go语言代码，编译执行后就可以发挥Go语言的速度优势了。因此，Gox语言也比较适合做初期的Go语言调试，还有一个更直接的方式是使用Gotx（在Gox官网上也有下载），这是使用完全和Go语言一样语法的解释器，可以理解成集成了Go语言标准库和不少第三方库的解释执行的Go语言，一样也不需要搭建Go语言环境。Gotx与Gox的区别在于，Gotx仍然遵循Go语言的文法，代码相对复杂一些，限制也多一些，但改写回Go语言准备编译执行时，基本上没有成本。

Gox的官网在这里，也可以在浏览器搜索引擎中直接搜索“gox语言”，Github页面在这里，在这里可以看到很多Gox语言的学习指南和实际应用实例。

https://github.com/topxeq/gotx

https://github.com/topxeq/gox

http://topget.org/gox.html
https://github.com/topxeq/gox

https://www.jianshu.com/nb/44919205