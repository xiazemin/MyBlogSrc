I":<p>PHP 中 json_encode() 只将索引数组（indexed array）转为数组格式，而将关联数组（associative array）转为对象格式。</p>

<p>$arr = array(
    ‘0’=&gt;’a’,’1’=&gt;’b’,’2’=&gt;’c’,’3’=&gt;’d’
);
echo json_encode($arr);
结果是：</p>

<p>[“a”,”b”,”c”,”d”]
而不是</p>

<p>{“0”:”a”,”1”:”b”,”2”:”c”,”3”:”d”}
强制转成对象</p>

<p>$arr = array(
    ‘0’=&gt;’a’,’1’=&gt;’b’,’2’=&gt;’c’,’3’=&gt;’d’
);
echo json_encode((object)$arr);
输出结果：</p>

<p>{“0”:”a”,”1”:”b”,”2”:”c”,”3”:”d”}</p>

<p>json_encode()序列化一个对象时，会先提取(get_object_vars)对象的公有(public、static)属性合并为一个数组，再进行序列化。private、protected属性以及类方法都将被丢弃。</p>

<p>但是如果继承自arrayObject 所有属性会被丢弃，除非继承JsonSerializable 并且实现jsonSerialize方法</p>

<!-- more -->

<p>&lt;?php
/**</p>
<ul>
  <li>Created by PhpStorm.</li>
  <li>Date: 20/10/24</li>
  <li>Time: 21:34</li>
  <li>@category Category</li>
  <li>@package FileDirFileName</li>
  <li>@link ${link}
 */
class A{
 public $a;
 public $_b;
 private $c;
 static $d;
 protected $e;
 public function __construct($a, $b){
     $this-&gt;a = $a;
     $this-&gt;_b = $b;
     $this-&gt;c=4;
     $this-&gt;d=5;
     $this-&gt;e=6;
 }
 public function sum(){
     return $this-&gt;a + $this-&gt;b;
 }
}
$obj = new A(1,2);
echo json_encode($obj);</li>
</ul>

<p>class B extends \ArrayObject {
    public $a;
    public $_b;
    private $c;
    static $d;
    protected $e;
    public function __construct($a, $b){
        $this-&gt;a = $a;
        $this-&gt;_b = $b;
        $this-&gt;c=4;
        $this-&gt;d=5;
        $this-&gt;e=6;
    }
    public function sum(){
        return $this-&gt;a + $this-&gt;b;
    }
    public function jsonSerialize(){
        $aRet=[];
        $aRet[‘f’]=7;
        return $aRet;
    }
}
$obj = new B(1,2);
echo json_encode($obj);</p>

<p>class C extends \ArrayObject implements JsonSerializable {
    public $a;
    public $_b;
    private $c;
    static $d;
    protected $e;
    public function __construct($a, $b){
        $this-&gt;a = $a;
        $this-&gt;_b = $b;
        $this-&gt;c=4;
        $this-&gt;d=5;
        $this-&gt;e=6;
    }
    public function sum(){
        return $this-&gt;a + $this-&gt;b;
    }</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public function jsonSerialize()
{
    parent::serialize(); // TODO: Change the autogenerated stub
    $aRet=[];
    foreach ($this as $k=&gt;$v){
        $aRet[$k]=$v;//走不进去
    }

    $this['g']=8; //仅仅可以输出这个
    $aRet=$this-&gt;getArrayCopy();
    $aRet['f']=7;
    return $aRet;
} } $obj = new C(1,2); echo json_encode($obj); //$ php json.php //{"a":1,"_b":2,"d":5}{}{"g":8,"f":7}
</code></pre></div></div>

<p>https://segmentfault.com/a/1190000021314708
https://blog.csdn.net/fdipzone/article/details/79771348</p>

:ET