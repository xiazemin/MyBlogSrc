I"~<p>https://dev.to/techschoolguru/a-clean-way-to-implement-database-transaction-in-golang-2ba</p>

<p>https://github.com/techschool/simplebank
<!-- more --></p>

<p>goUI</p>

<p>https://kpfaulkner.wordpress.com/2020/08/17/goui-a-very-simple-ui-framework/</p>

<p>package main</p>

<p>import (
    “github.com/hajimehoshi/ebiten”
    “github.com/kpfaulkner/goui/pkg”
    “github.com/kpfaulkner/goui/pkg/widgets”
    log “github.com/sirupsen/logrus”
    “image/color”
)</p>

<p>type MyApp struct {
    window pkg.Window
}</p>

<p>func NewMyApp() *MyApp {
    a := MyApp{}
    a.window = pkg.NewWindow(800, 600, “test app”, false, false)
    return &amp;a
}</p>

<p>func (m *MyApp) SetupUI() error {
    vPanel := widgets.NewVPanel(“main vpanel”, &amp;color.RGBA{0, 0, 0, 0xff})
    m.window.AddPanel(vPanel)
    button1 := widgets.NewTextButton(“text button 1”, “my button1”, true, 0, 0, nil, nil, nil, nil)
    vPanel.AddWidget(button1)
    return nil
}</p>

<p>func (m *MyApp) Run() error {
    m.SetupUI()
    ebiten.SetRunnableInBackground(true)
    ebiten.SetWindowResizable(true)
    m.window.MainLoop()
    return nil
}</p>

<p>func main() {
    log.SetLevel(log.DebugLevel)
    app := NewMyApp()
    app.Run()
}</p>

<p>https://github.com/kpfaulkner/goui</p>

<p>https://fyne.io/</p>

<p>ent - An Entity Framework For Go</p>

<p>https://github.com/facebook/ent</p>
:ET