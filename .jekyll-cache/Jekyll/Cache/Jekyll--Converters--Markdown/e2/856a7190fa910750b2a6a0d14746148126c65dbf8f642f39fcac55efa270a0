I"k<p>在Go 1.7，我们有一个新包/ HTTP / httptrace提供了一个方便的机制，观察一个HTTP请求时会发生什么
分布式跟踪是监测和分析微服务架构系统，导出结果到为X-TRACE，如谷歌的Dapper和Twitter的Zipkin 。 它们的底层原理是分布式环境传播 ，其中涉及的某些元数据与进入系统的每个请求相关联，并且跨线程和进程边界传播元数据跟随请求进出各种微服务调用。 如果我们为每个入站请求分配一个唯一的ID并将其作为分布式上下文的一部分，那么我们可以将来自多个线程和多个进程的各种性能分析数据合并到统一的表示我们系统执行请求的“跟踪”中。
分布式跟踪需要使用Hook钩子和上下文传播机制来测试应用程序代码（或其使用的框架）。
没有良好的API为开发人员提供在编程语言之间内部一致性，那就无法绑定到指定的跟踪系统。
2015年10月一个新的社区形成，催生了OpenTracing API，一个开放的，厂商中立的，与语言无关的分布式跟踪标准。你可以阅读更多关于Ben Sigelman有关OpenTracing动机和设计原理背后的文章 。
https://opentracing.io/
https://zipkin.io/
https://github.com/openzipkin/zipkin
https://github.com/openzipkin/zipkin-go
https://github.com/opentracing/opentracing-go
<!-- more --></p>
:ET