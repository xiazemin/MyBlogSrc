I"<p>众所周知，在golang中，slice（切片）是我们最常使用到的一种数据结构，是一种可变长度的数组，本篇文章我们主要结合源码来介绍一下slice的底层实现，以及在使用slice时的一些注意事项。
Slice结构体
首先我们来看一段代码：
package
 main
import (
“fmt”
  “unsafe”
)
func main() {
var a int
  var b int8
  var c int16
  var d int32
  var e int64
  slice := make([]int, 0)
  slice = append(slice, 1)
  fmt.Printf(“int:%d\nint8:%d\nint16:%d\nint32:%d\nint64:%d\n”, unsafe.Sizeof(a), unsafe.Sizeof(b), unsafe.Sizeof(c), unsafe.Sizeof(d), unsafe.Sizeof(e))
  fmt.Printf(“slice:%d”, unsafe.Sizeof(slice))
}
该程序输出golang中常用数据类型占多少byte，输出结果是：</p>
:ET