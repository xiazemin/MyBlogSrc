I"H<p>什么是go-cache
KV存储引擎有很多，常用的如redis，rocksdb等，如果在实际使用中只是在内存中实现一个简单的kv缓存，使用上述引擎就太大费周章了。在Golang中可以使用go-cache这个package实现一个轻量级基于内存的kv存储或缓存。GitHub源码地址是：https://github.com/patrickmn/go-cache 。
go-cache这个包实际上是在内存中实现了一个线程安全的map[string]interface{}，可以将任何类型的对象作为value，不需要通过网络序列化或传输数据，适用于单机应用。对于每组KV数据可以设置不同的TTL（也可以永久存储），并可以自动实现过期清理。
在使用时一般都是将go-cache作为数据缓存来使用，而不是持久性的数据存储。对于停机后快速恢复的场景，go-cache支持将缓存数据保存到文件，恢复时从文件中load数据加载到内存。
<!-- more -->
如何使用go-cache
常用接口分析
对于数据库的基本操作，无外乎关心的CRUD（增删改查），对应到go-cache中的接口如下：</p>
:ET