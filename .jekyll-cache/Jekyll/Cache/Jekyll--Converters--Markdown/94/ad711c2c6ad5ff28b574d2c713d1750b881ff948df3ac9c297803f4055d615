I"*<!-- more -->
<p>抽象语法树的观点认为任何复杂的语句嵌套情况都可以借助于树的形式加以描述。确实，不得不承认应用抽象语法树可以使语句翻译变得相对容易，它很好地描述了语句、表达式之间的联系。不过，由于Neo Pascal并不会显式构造抽象语法树，所以不得不借助于其他数据结构实现。根据先前的经验，栈结构就是不二之选。
DAG（有向无环图）
后缀表达式：也称为逆波兰表达式，这种形式简单明晰，便于存储。在处理表达式翻译时，后缀表达式有着其他形式无法比拟的优势。不过，由于后缀表达式的应用领域比较单一，所以很少独立作为一个实际编译器的IR存在。</p>
<ol>
  <li>后缀表达式
不包含括号，运算符放在两个运算对象的后面，所有的计算按运算符出现的顺序，严格从左向右进行（不再考虑运算符的优先规则，如：(2 + 1) * 3 ， 即2 1 + 3 *
1.1. 前缀记法、中缀记法和后缀记法
它们都是对表达式的记法，因此也被称为前缀记法、中缀记法和后缀记法。它们之间的区别在于运算符相对与操作数的位置不同：前缀表达式的运算符位于与其相关的操作数之前；中缀和后缀同理。</li>
</ol>
:ET