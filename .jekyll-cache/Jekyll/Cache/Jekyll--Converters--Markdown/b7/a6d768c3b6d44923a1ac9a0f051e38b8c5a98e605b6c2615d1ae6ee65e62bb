I"=<p>PHP函数stream_set_timeout（Stream Functions）作用于读取流时的时间控制。fsockopen函数的timeout只管创建连接时的超时，对于连接后读取流时的超时，则需要用到 stream_set_timeout函数。由于国内的网络环境不是很稳定，尤其是连接国外的时候，不想程序出现Fatal error: Maximum execution time of 30 seconds exceeded in …的错误，该函数尤其有用。stream_set_timeout需配合stream_get_meta_data使用，如果没有timeout， stream_get_meta_data返回数组中time_out为空，反之为1，可根据此判断是否超时。另外由于PHP默认的Maximum execution time为30秒，这是一次执行周期的时间，为了不出现上述的Fatal error，还需要设置一个总的读取流的时间
<!-- more -->
$server=”www.yahoo.com”;<br />
$port = 80;</p>

<p>$data=”GET / HTTP/1.0rn”;<br />
$data.=”Connection: Closern”;<br />
$data.=”User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)rnrn”;</p>

<p>$start_time = time();<br />
$fp=fsockopen($server, $port, $errno, $errstr, 5);<br />
if (!$fp) {<br />
die(“Connect Timeout.n”);<br />
} else {<br />
stream_set_blocking($fp, True);<br />
stream_set_timeout($fp, 3);</p>

<p>fputs($fp, “$data”);<br />
while (!feof($fp)) {<br />
$text .= fread($fp, 2000);</p>

<p>$diff = time() - $start_time;<br />
if ($diff &gt; 24) {<br />
die(“Timeout!n”);<br />
}</p>

<p>$status = stream_get_meta_data($fp);<br />
if ($status[’timed_out’]) {<br />
die(“Stream Timeout!n”);<br />
}<br />
}<br />
}</p>

<p>fclose($fp);</p>
:ET