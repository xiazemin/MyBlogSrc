I"°<p>github.com/olivere/elastic
bulk := client.Bulk()</p>

<p>// Elasticsearch _id counter starts at 0
docID := 0</p>

<p>// Iterate over the slice of Elasticsearch documents
for _, doc := range docs {</p>

<p>// Incrementally change the _id number in each iteration
docID++</p>

<p>// Convert the _id integer into a string
idStr := strconv.Itoa(docID)</p>

<p>// Create a new int64 float from time package for doc timestamp
doc.Timestamp = time.Now().Unix()
fmt.Println(‚Äúntime.Now().Unix():‚Äù, doc.Timestamp)</p>

<p>// Declate a new NewBulkIndexRequest() instance
req := elastic.NewBulkIndexRequest()</p>

<p>// Assign custom values to the NewBulkIndexRequest() based on the Elasticsearch
// index and the request type
req.OpType(‚Äúindex‚Äù) // set type to ‚Äúindex‚Äù document
req.Index(indexName)
//req.Type(‚Äú_doc‚Äù) // Doc types are deprecated (default now _doc)
req.Id(idStr)
req.Doc(doc)</p>

<p>// Print information about the NewBulkIndexRequest object
fmt.Println(‚Äúreq:‚Äù, req)
fmt.Println(‚Äúreq TYPE:‚Äù, reflect.TypeOf(req))</p>

<p>// Add the new NewBulkIndexRequest() to the client.Bulk() instance
bulk = bulk.Add(req)
fmt.Println(‚ÄúNewBulkIndexRequest().NumberOfActions():‚Äù, bulk.NumberOfActions())
}</p>

<p>// Do() sends the bulk requests to Elasticsearch
bulkResp, err := bulk.Do(ctx)</p>

<!-- more -->
<p>https://kb.objectrocket.com/elasticsearch/how-to-bulk-index-elasticsearch-documents-using-golang-450</p>
:ET