I"<p>https://github.com/patrickmn/go-cache</p>

<p>go-cache is an in-memory key:value store/cache similar to memcached that is suitable for applications running on a single machine. Its major advantage is that, being essentially a thread-safe map[string]interface{} with expiration times, it doesn’t need to serialize or transmit its contents over the network.
<!-- more -->
go-cache是一款类似于memached 的key/value 缓存软件。它比较适用于单机执行的应用程序。
go-cache实质上就是拥有过期时间并且线程安全的map，可以被多个goroutine安全访问。</p>

<p>https://github.com/chain-zhang/pinyin/blob/master/resource.go
Go Micro是一个插件化的基础框架，基于此可以构建微服务。Micro的设计哲学是『可插拔』的插件化架构。在架构之外，它默认实现了consul作为服务发现，通过http进行通信，通过protobuf和json进行编解码。我们一步步深入下去。
Go Micro是：</p>

<p>一个用Golang编写的包
一系列插件化的接口定义
基于RPc
Go Micro为下面的模块定义了接口：
服务发现
编解码
服务端、客户端
订阅、发布消息</p>

<p>https://github.com/Leon2012/protoc-gen-micro-lite</p>

<p>https://github.com/grpc-ecosystem/grpc-gateway</p>
:ET