I"=
<p>https://github.com/lizrice/containers-from-scratch</p>

<!-- more -->

<p>package main</p>

<p>import (
	“fmt”
	“io/ioutil”
	“os”
	“os/exec”
	“path/filepath”
	“strconv”
	“syscall”
)</p>

<p>// go run main.go run <cmd> <args>
func main() {
	switch os.Args[1] {
	case "run":
		run()
	case "child":
		child()
	default:
		panic("help")
	}
}</args></cmd></p>

<p>func run() {
	fmt.Printf(“Running %v \n”, os.Args[2:])</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmd := exec.Command("/proc/self/exe", append([]string{"child"}, os.Args[2:]...)...)
cmd.Stdin = os.Stdin
cmd.Stdout = os.Stdout
cmd.Stderr = os.Stderr
cmd.SysProcAttr = &amp;syscall.SysProcAttr{
	Cloneflags:   syscall.CLONE_NEWUTS | syscall.CLONE_NEWPID | syscall.CLONE_NEWNS,
	Unshareflags: syscall.CLONE_NEWNS,
}

must(cmd.Run()) }
</code></pre></div></div>

<p>func child() {
	fmt.Printf(“Running %v \n”, os.Args[2:])</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cg()

cmd := exec.Command(os.Args[2], os.Args[3:]...)
cmd.Stdin = os.Stdin
cmd.Stdout = os.Stdout
cmd.Stderr = os.Stderr

must(syscall.Sethostname([]byte("container")))
must(syscall.Chroot("/home/liz/ubuntufs"))
must(os.Chdir("/"))
must(syscall.Mount("proc", "proc", "proc", 0, ""))
must(syscall.Mount("thing", "mytemp", "tmpfs", 0, ""))

must(cmd.Run())

must(syscall.Unmount("proc", 0))
must(syscall.Unmount("thing", 0)) }
</code></pre></div></div>

<p>func cg() {
	cgroups := “/sys/fs/cgroup/”
	pids := filepath.Join(cgroups, “pids”)
	os.Mkdir(filepath.Join(pids, “liz”), 0755)
	must(ioutil.WriteFile(filepath.Join(pids, “liz/pids.max”), []byte(“20”), 0700))
	// Removes the new cgroup in place after the container exits
	must(ioutil.WriteFile(filepath.Join(pids, “liz/notify_on_release”), []byte(“1”), 0700))
	must(ioutil.WriteFile(filepath.Join(pids, “liz/cgroup.procs”), []byte(strconv.Itoa(os.Getpid())), 0700))
}</p>

<p>func must(err error) {
	if err != nil {
		panic(err)
	}
}</p>

<p>https://www.bilibili.com/video/av201598179/</p>

<p>https://www.bilibili.com/video/av15302453/</p>

<p>https://zhuanlan.zhihu.com/p/137395088</p>

<p>https://github.com/lizrice/containers-from-scratch</p>

<p>https://github.com/jizg/containers-from-scratch</p>

<p>https://gotoams.nl/2018/sessions/429/containers-from-scratch</p>

<p>https://man7.org/linux/man-pages/man7/namespaces.7.html</p>

<p>https://man7.org/linux/man-pages/man7/cgroups.7.html</p>

<p>https://segmentfault.com/a/1190000006245007</p>
:ET