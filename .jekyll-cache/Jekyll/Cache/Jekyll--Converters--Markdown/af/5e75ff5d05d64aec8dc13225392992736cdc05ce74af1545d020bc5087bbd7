I"1<p>https://github.com/Blizzard/node-rdkafka</p>

<p>enable.auto.commit vs enable.auto.offset.store</p>

<p>A Kafka Consumer by default periodically commits the current offsets unless it is turned off by disabling enable.auto.commit. According to the documentation youâ€™re then responsible for committing the offsets yourself. So when I want manual control, that seems to be the way to go, however the documentation also mentions the stored offsets and that if you want manual control you should disable enable.auto.offset.store and use rd_kafka_offsets_store() and leave the auto-commit untouched.
<!-- more -->
With enable.auto.commit=true librdkafka will commit the last stored offset for each partition at regular intervals, at rebalance, and at consumer shutdown.</p>

<p>The offsets that are used here, are taken from an in-memory offset store. This store will be updated automatically when enable.auto.offset.store=true.</p>

<p>If you set enable.auto.offset.store=false you can update this in-memory offset store by yourself via rd_kafka_offsets_store().</p>

<p>This is preferred over disabling enable.auto.commit because you do not have to reimplement calling commit at regular intervals yourself, but can rely on the already built-in logic instead.</p>

<p>You have manual control about whether or not offsets are committed either way, but disabling enable.auto.commit and calling commit yourself will most likely lead to more frequent commits.</p>

<p>https://stackoverflow.com/questions/58517125/kafka-offset-management-enable-auto-commit-vs-enable-auto-offset-store</p>

:ET