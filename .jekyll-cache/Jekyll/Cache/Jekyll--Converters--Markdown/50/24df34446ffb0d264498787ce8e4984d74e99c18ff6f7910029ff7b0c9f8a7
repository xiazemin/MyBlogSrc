I"@<p>普通的map是不支持并发的，换而言之,不是线程(goroutine)安全的。golang 1.4开始的map的并发读是没有支持，但是并发写会出现脏数据。golang 1.6之后，并发地读写会直接panic：
fatal error: concurrent map read and map write
<!-- more -->
package main
func main() {
    m := make(map[int]int)
    go func() {
        for {
            _ = m[1]
        }
    }()
    go func() {
        for {
            m[2] = 2
        }
    }()
    select {}
}
所以需要支持对map的并发读写时候，博主使用两种方法：</p>
:ET